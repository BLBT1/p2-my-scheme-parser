; Utility function for testing parsing against built-in read.
;
; Project UID 7e390a38edc65081bf76ab8edd67fe9d208befb9

(load "parser.scm")

(define (parse-all read-fn)
  (let ((expected (read))
        (result (read-fn)))
    (cond ((eof-object? expected)
           (begin (display "Done.") (newline)))
          ((eof-object? result)
           (begin (display "Unexpected EOF") (newline)))
          (else
           (begin (if (not (equal? result expected))
                      (begin (display "Unexpected result:")
                             (newline)
                             (display "  expected: ")
                             (write expected)
                             (newline)
                             (display "  got: ")
                             (write result)
                             (newline)
                      )
                      (begin (display "Correct result: ")
                             (write result)
                             (newline)
                      )
                  )
                  (read-separator)
                  (parse-all read-fn)
           ))
    )
  )
)

(define (read-separator)
  (let ((char (peek-char)))
    (cond ((eof-object? char)
           (begin (display "Expected | after datum, got: EOF")
                  (newline)))
          ((whitespace? char) (read-char) (read-separator))
          ((not (char=? char #\|))
           (display "Expected | after datum, got: ")
           (display char)
           (newline))
          (else (read-char))
    )
  )
)
