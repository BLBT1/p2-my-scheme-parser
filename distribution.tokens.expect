(punctuator "(")
(identifier define)
(punctuator "(")
(identifier clear-line)
(punctuator ")")
(punctuator "(")
(identifier let)
(punctuator "(")
(punctuator "(")
(identifier next-char)
(punctuator "(")
(identifier read-char)
(punctuator ")")
(punctuator ")")
(punctuator ")")
(punctuator "(")
(identifier if)
(punctuator "(")
(identifier not)
(punctuator "(")
(identifier or)
(punctuator "(")
(identifier eof-object?)
(identifier next-char)
(punctuator ")")
(punctuator "(")
(identifier char=?)
(identifier next-char)
(character #\newline)
(punctuator ")")
(punctuator ")")
(punctuator ")")
(punctuator "(")
(identifier clear-line)
(punctuator ")")
(punctuator ")")
(punctuator ")")
(punctuator ")")
(punctuator "(")
(identifier define)
(identifier repl-continuation)
(punctuator "'")
(punctuator "(")
(punctuator ")")
(punctuator ")")
(punctuator "(")
(identifier define)
(punctuator "(")
(identifier error-setup)
(identifier cont)
(punctuator ")")
(punctuator "(")
(identifier set!)
(identifier repl-continuation)
(identifier cont)
(punctuator ")")
(punctuator ")")
(punctuator "(")
(identifier define)
(identifier void-object)
(punctuator "(")
(identifier if)
(boolean #f)
(boolean #f)
(punctuator ")")
(punctuator ")")
(punctuator "(")
(identifier define)
(punctuator "(")
(identifier error)
(identifier message)
(punctuator ".")
(identifier args)
(punctuator ")")
(punctuator "(")
(identifier display)
(string "Error: ")
(punctuator ")")
(punctuator "(")
(identifier display)
(identifier message)
(punctuator ")")
(punctuator "(")
(identifier cond)
(punctuator "(")
(punctuator "(")
(identifier not)
(punctuator "(")
(identifier null?)
(identifier args)
(punctuator ")")
(punctuator ")")
(punctuator "(")
(identifier display)
(string " ")
(punctuator ")")
(punctuator "(")
(identifier write)
(punctuator "(")
(identifier if)
(punctuator "(")
(identifier =)
(punctuator "(")
(identifier length)
(identifier args)
(punctuator ")")
(number 1)
(punctuator ")")
(punctuator "(")
(identifier car)
(identifier args)
(punctuator ")")
(identifier args)
(punctuator ")")
(punctuator ")")
(punctuator ")")
(punctuator ")")
(punctuator "(")
(identifier newline)
(punctuator ")")
(punctuator "(")
(identifier clear-line)
(punctuator ")")
(punctuator "(")
(identifier repl-continuation)
(identifier void-object)
(punctuator ")")
(punctuator ")")
(punctuator "(")
(identifier call-with-current-continuation)
(identifier error-setup)
(punctuator ")")
(punctuator "(")
(identifier define)
(punctuator "(")
(identifier get-non-eof-char)
(punctuator ")")
(punctuator "(")
(identifier let)
(punctuator "(")
(punctuator "(")
(identifier char)
(punctuator "(")
(identifier read-char)
(punctuator ")")
(punctuator ")")
(punctuator ")")
(punctuator "(")
(identifier if)
(punctuator "(")
(identifier eof-object?)
(identifier char)
(punctuator ")")
(punctuator "(")
(identifier error)
(string "end of file")
(punctuator ")")
(identifier char)
(punctuator ")")
(punctuator ")")
(punctuator ")")
(punctuator "(")
(identifier define)
(punctuator "(")
(identifier whitespace?)
(identifier char)
(punctuator ")")
(punctuator "(")
(identifier or)
(punctuator "(")
(identifier char=?)
(identifier char)
(character #\space)
(punctuator ")")
(punctuator "(")
(identifier char=?)
(identifier char)
(character #\newline)
(punctuator ")")
(punctuator ")")
(punctuator ")")
(punctuator "(")
(identifier define)
(punctuator "(")
(identifier delimiter?)
(identifier char)
(punctuator ")")
(punctuator "(")
(identifier or)
(punctuator "(")
(identifier eof-object?)
(identifier char)
(punctuator ")")
(punctuator "(")
(identifier whitespace?)
(identifier char)
(punctuator ")")
(punctuator "(")
(identifier char=?)
(identifier char)
(character #\()
(punctuator ")")
(punctuator "(")
(identifier char=?)
(identifier char)
(character #\))
(punctuator ")")
(punctuator "(")
(identifier char=?)
(identifier char)
(character #\")
(punctuator ")")
(punctuator "(")
(identifier char=?)
(identifier char)
(character #\;)
(punctuator ")")
(punctuator ")")
(punctuator ")")
(punctuator "(")
(identifier define)
(punctuator "(")
(identifier read-start)
(identifier expect)
(identifier error-message)
(punctuator ")")
(punctuator "(")
(identifier let)
(punctuator "(")
(punctuator "(")
(identifier first-char)
(punctuator "(")
(identifier get-non-eof-char)
(punctuator ")")
(punctuator ")")
(punctuator ")")
(punctuator "(")
(identifier if)
(punctuator "(")
(identifier char=?)
(identifier first-char)
(identifier expect)
(punctuator ")")
(boolean #t)
(punctuator "(")
(identifier error)
(identifier error-message)
(punctuator ")")
(punctuator ")")
(punctuator ")")
(punctuator ")")
(punctuator "(")
(identifier define)
(punctuator "(")
(identifier token-make)
(identifier type)
(identifier value)
(punctuator ")")
(punctuator "(")
(identifier list)
(identifier type)
(identifier value)
(punctuator ")")
(punctuator ")")
(punctuator "(")
(identifier define)
(punctuator "(")
(identifier token-type)
(identifier token)
(punctuator ")")
(punctuator "(")
(identifier car)
(identifier token)
(punctuator ")")
(punctuator ")")
(punctuator "(")
(identifier define)
(punctuator "(")
(identifier token-data)
(identifier token)
(punctuator ")")
(punctuator "(")
(identifier cadr)
(identifier token)
(punctuator ")")
(punctuator ")")
